{"version":3,"sources":["features/userSlice.js","componets/Login.js","componets/LogOut.js","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Login","useState","setName","email","setEmail","password","setPassword","dispatch","useDispatch","onFinish","values","loggedIn","onFinishFailed","errorInfo","console","log","autoComplete","Item","label","rules","required","message","value","onChange","e","target","Password","type","htmlType","LogOut","useSelector","onClick","preventDefault","handleLogout","App","className","configureStore","reducer","useReducer","ReactDOM","render","store","document","getElementById"],"mappings":"yLAEaA,EAAYC,YAAY,CACjCC,KAAM,OACNC,aAAc,CACVC,KAAM,MAEVC,SAAU,CACNC,MAAO,SAACC,EAAMC,GACVD,EAAMH,KAAOI,EAAOC,SAExBC,OAAQ,SAACH,GACLA,EAAMH,KAAO,SAKlB,EAAuBJ,EAAUW,QAA1BL,EAAP,EAAOA,MAAMI,EAAb,EAAaA,OAEPE,EAAa,SAACL,GAAD,OAAWA,EAAMH,KAAKA,MAEjCJ,IAAf,Q,iCCkEea,EAhFD,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAgBjB,OACE,mCACE,eAAC,IAAD,CACEC,SAlBW,SAACC,GAChBH,EACEd,EAAM,CACJJ,KAAMA,EACNc,MAAOA,EACPE,SAAUA,EACVM,UAAU,MAaVC,eARiB,SAACC,GACtBC,QAAQC,IAAI,UAAWF,IAQnBG,aAAa,MAHf,UAKE,cAAC,IAAKC,KAAN,CACEC,MAAM,WACN7B,KAAK,OACL8B,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCANf,SAUE,cAAC,IAAD,CAAOC,MAAOjC,EAAMkC,SAAU,SAACC,GAAD,OAAOtB,EAAQsB,EAAEC,OAAOH,YAGxD,cAAC,IAAKL,KAAN,CACEC,MAAM,QACN7B,KAAK,QACL8B,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,SAUE,cAAC,IAAD,CAAOC,MAAOnB,EAAOoB,SAAU,SAACC,GAAD,OAAOpB,EAASoB,EAAEC,OAAOH,YAG1D,cAAC,IAAKL,KAAN,CACEC,MAAM,WACN7B,KAAK,WACL8B,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCANf,SAUE,cAAC,IAAMK,SAAP,CACEJ,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAOlB,EAAYkB,EAAEC,OAAOH,YAI1C,cAAC,IAAKL,KAAN,UACE,cAAC,IAAD,CAAQU,KAAK,UAAUC,SAAS,SAAhC,4BC1DKC,EAhBA,WACb,IAAMtC,EAAOuC,YAAY/B,GACnBQ,EAAWC,cAMjB,OACE,gCACE,4DAA+BjB,EAAKF,QACpC,wBAAQ0C,QAAS,SAACP,GAAD,OARA,SAACA,GACpBA,EAAEQ,iBACFzB,EAASV,KAMiBoC,CAAaT,IAArC,yBCESU,MAVf,WACE,IAAM3C,EAAOuC,YAAY/B,GAEzB,OACE,mCACE,qBAAKoC,UAAU,MAAf,SAAsB5C,EAAO,cAAC,EAAD,IAAa,cAAC,EAAD,SCTjC6C,cAAe,CAC5BC,QAAS,CACP9C,KAAM+C,KCCVC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d09b21ad.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        user: null,\n    },\n    reducers: {\n        login: (state,action) => {\n            state.user = action.payload;\n        },\n        logout: (state) => {\n            state.user = null\n        }\n    }\n})\n\nexport const {login,logout} = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../features/userSlice\";\n\n// antd\nimport { Form, Input, Button } from \"antd\";\n\nconst Login = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const onFinish = (values) => {\n    dispatch(\n      login({\n        name: name,\n        email: email,\n        password: password,\n        loggedIn: true,\n      })\n    );\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <>\n      <Form\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input value={name} onChange={(e) => setName(e.target.value)} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your email!\",\n            },\n          ]}\n        >\n          <Input value={email} onChange={(e) => setEmail(e.target.value)} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout, selectUser } from \"../features/userSlice\";\n\nconst LogOut = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const handleLogout = (e) => {\n    e.preventDefault();\n    dispatch(logout());\n  };\n\n  return (\n    <div>\n      <h1>hello, welcome to my page {user.name}</h1>\n      <button onClick={(e) => handleLogout(e)}>Log Out</button>\n    </div>\n  );\n};\n\nexport default LogOut;\n","import \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport Login from \"./componets/Login\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport LogOut from \"./componets/LogOut\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n\n  return (\n    <>\n      <div className=\"App\">{user ? <LogOut /> : <Login />}</div>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport useReducer from \"../features/userSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: useReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './app/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}